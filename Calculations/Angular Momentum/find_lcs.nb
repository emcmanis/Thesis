(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[     50240,       1369]
NotebookOptionsPosition[     46926,       1267]
NotebookOutlinePosition[     47319,       1284]
CellTagsIndexPosition[     47276,       1281]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Notebook for Finding Critical Values of \[Lambda]"
}], "Title",
 CellChangeTimes->{{3.540306636902382*^9, 3.540306665812695*^9}}],

Cell["\<\
Here is my actual code that I actually ran to get my thesis data. For easier \
data collection, this was run as a loop once all the bugs were worked out. I \
present here the expanded version, which can be compressed and looped if \
desired.\
\>", "Text",
 CellChangeTimes->{{3.540306669044539*^9, 3.540306712917094*^9}, {
  3.540306746328044*^9, 3.5403067514460077`*^9}}],

Cell[CellGroupData[{

Cell["Finding candidate ranges", "Section",
 CellChangeTimes->{{3.539016437663969*^9, 3.5390164403089323`*^9}}],

Cell[CellGroupData[{

Cell["Setup", "Subsection",
 CellChangeTimes->{{3.5390164053571978`*^9, 3.539016409700904*^9}, {
  3.540217620221322*^9, 3.5402176227169867`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"l", "=", "3"}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"Angular", " ", "momentum", " ", "quantum", " ", "number"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.5402162274182777`*^9, 3.540216234312664*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"RoughCritical", "[", "\[Lambda]_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"H", ",", "res", ",", "d\[Rho]", ",", "\[Rho]inf", ",", "nn"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"d\[Rho]", "=", "0.1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Rho]inf", "=", 
      RowBox[{"Round", "[", 
       RowBox[{"20", "*", "\[Lambda]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"nn", "=", 
      RowBox[{"Round", "[", 
       RowBox[{"\[Rho]inf", "/", "d\[Rho]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"H", "=", 
      RowBox[{"SparseArray", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"n_", ",", "n_"}], "}"}], "\[Rule]", 
           RowBox[{
            FractionBox["2.", 
             SuperscriptBox["d\[Rho]", "2"]], "-", 
            RowBox[{
             FractionBox["2.", 
              RowBox[{"n", "*", "d\[Rho]"}]], 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "n"}], "*", 
               RowBox[{"d\[Rho]", "/", "\[Lambda]"}]}]]}], "+", 
            FractionBox[
             RowBox[{"l", "*", 
              RowBox[{"(", 
               RowBox[{"l", "+", "1"}], ")"}]}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"n", "*", "d\[Rho]"}], ")"}], "^", "2"}]]}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"n_", ",", " ", "m_"}], "}"}], "/;", " ", 
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{"n", "-", "m"}], "]"}], " ", "\[Equal]", " ", "1"}]}], 
           " ", "\[Rule]", " ", 
           FractionBox[
            RowBox[{"-", "1."}], 
            SuperscriptBox["d\[Rho]", "2"]]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"nn", ",", "nn"}], "}"}], ",", " ", "0."}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"res", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{"H", ",", 
         RowBox[{"-", "100"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "res", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5390158685780363`*^9, 3.539015871101367*^9}, {
   3.53901591943513*^9, 3.539015935217182*^9}, {3.53901600476367*^9, 
   3.539016008427278*^9}, {3.539016127747554*^9, 3.5390161280126057`*^9}, 
   3.5390163894865522`*^9, {3.539016462324894*^9, 3.539016486399221*^9}, {
   3.539016548826387*^9, 3.539016552986286*^9}, {3.539099086158347*^9, 
   3.5390990862780037`*^9}, {3.5391390039796953`*^9, 
   3.5391390042126093`*^9}, {3.54021624714962*^9, 3.54021625194832*^9}}],

Cell[TextData[{
 "This function takes a value of lambda and returns the 100 eigenvalues of \
the hamiltonian which have the lowest absolute value. nn is the matrix size, \
d\[Rho] is the step size, and \[Rho]inf is numerical infinity for the \
problem.\n\nThe results of this calculation are extremely sensitive to \
\[Rho]inf, and a larger \[Rho]inf makes for less error. However, for larger \
values of \[Rho]inf, more ",
 StyleBox["positive",
  FontSlant->"Italic"],
 " eigenvalues are found near 0, because the positive eigenvalues are in a \
continuous spectrum. As the grid becomes a better approximation of reality, \
more of these are picked up. This squeezes the negative eigenvalues (whose \
spectrum starts near -1) out, especially at higher values of \[Lambda]. In \
order to ensure that there are *some* negative eigenvalues, we therefore pin \
\[Rho]inf to some constant factor times \[Lambda]. "
}], "Text",
 CellChangeTimes->{
  3.540216239728427*^9, {3.5402162718311357`*^9, 3.540216333941002*^9}, {
   3.540216977073237*^9, 3.540217062577939*^9}, {3.5402172545224648`*^9, 
   3.5402172810522747`*^9}, {3.5402174004666967`*^9, 3.540217472535021*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CountNegs", "[", "list_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"neg", ",", "i"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"neg", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{
        RowBox[{"list", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "<", "0"}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"neg", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "neg", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{3.5390163894870167`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FindLs", "[", 
   RowBox[{"l0_", ",", "lf_", ",", "val_", ",", "vaf_", ",", "range_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "mid", ",", "vam", ",", "lnegs", ",", "mnegs", ",", "hnegs", ",", 
      "res"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"res", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"mid", "=", 
      RowBox[{"l0", "+", 
       FractionBox[
        RowBox[{"lf", "-", "l0"}], "2"]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"lnegs", "=", 
      RowBox[{"CountNegs", "[", "val", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"vam", "=", 
      RowBox[{"RoughCritical", "[", "mid", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"mnegs", "=", 
      RowBox[{"CountNegs", "[", "vam", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"hnegs", "=", 
      RowBox[{"CountNegs", "[", "vaf", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"lf", "-", "l0"}], ">", "range"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"lnegs", "<", "mnegs"}], " ", "||", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"lnegs", "\[Equal]", "mnegs"}], " ", "&&", " ", 
             RowBox[{
              RowBox[{"val", "[", 
               RowBox[{"[", "1", "]"}], "]"}], " ", "<", " ", 
              RowBox[{"vam", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "&&", " ", 
             RowBox[{"mnegs", ">", "0"}]}], ")"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"res", "=", 
            RowBox[{"Join", "[", 
             RowBox[{"res", ",", 
              RowBox[{"FindLs", "[", 
               RowBox[{
               "l0", ",", "mid", ",", "val", ",", "vam", ",", "range"}], 
               "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Return", "[", "res", "]"}]}]}], "\[IndentingNewLine]", 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"mnegs", "<", "hnegs"}], " ", "||", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"hnegs", "\[Equal]", "mnegs"}], " ", "&&", " ", 
             RowBox[{
              RowBox[{"vam", "[", 
               RowBox[{"[", "1", "]"}], "]"}], " ", "<", " ", 
              RowBox[{"vaf", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "&&", 
             RowBox[{"hnegs", ">", "0"}]}], ")"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"res", "=", 
            RowBox[{"Join", "[", 
             RowBox[{"res", ",", 
              RowBox[{"FindLs", "[", 
               RowBox[{
               "mid", ",", "lf", ",", "vam", ",", "vaf", ",", "range"}], 
               "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Return", "[", "res", "]"}]}]}], "\[IndentingNewLine]", 
         "]"}], ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Print", "[", "\"\<Found one!\>\"", "]"}], ";", " ", 
        RowBox[{"(*", 
         RowBox[{"this", " ", "lets", " ", "you", " ", "know", " ", 
          RowBox[{"it", "'"}], "s", " ", "working"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"l0", ",", "lf"}], "}"}], "}"}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5390160212254333`*^9, 3.539016022503304*^9}, {
   3.539016061561664*^9, 3.539016107531227*^9}, {3.5390161435373096`*^9, 
   3.539016157009387*^9}, {3.5390161921374207`*^9, 3.539016257482386*^9}, 
   3.539016389488509*^9, {3.5390164910828753`*^9, 3.5390164914821863`*^9}, {
   3.5390983802099953`*^9, 3.539098460137817*^9}, {3.539098564016499*^9, 
   3.539098577680982*^9}, 3.539098797081745*^9, {3.5390994221204767`*^9, 
   3.539099479099491*^9}, 3.539099942789166*^9, {3.539099984412463*^9, 
   3.539100022754026*^9}, {3.539100110892888*^9, 3.539100115457612*^9}, {
   3.539100488105488*^9, 3.539100495413364*^9}, {3.539100570058125*^9, 
   3.5391005786774063`*^9}, {3.54021977060246*^9, 3.54021977644217*^9}}],

Cell["\<\
This is my multiple rootfinder, to find ranges where a zero occurs. Again, \
when we bisect, we are looking at the number of negative eigenvalues as a \
function of lambda. In this routine, we assume multiple zeroes, and keep \
bisecting any range with a zero in it.

The complicated conditional for bisection is meant to deal with the problem \
of negative eigenvalues getting squeezed out by positive ones. Given a half \
of the input range, it bisects that half if either the number of negative \
eigenvalues increases (a regular zero), or the number of negative eigenvalues \
stays constant, but the value of the first negative eigenvalue jumps. This \
indicates that one negative eigenvalue was squeezed out, but another was \
added. In general, as \[Lambda] increases, the negative eigenvalues should \
decrease in value (coming closer and closer to the Coulomb energies). \
\>", "Text",
 CellChangeTimes->{{3.5402174972704782`*^9, 3.5402175315094757`*^9}, {
  3.5402176765147657`*^9, 3.5402177302649508`*^9}, {3.540217764136372*^9, 
  3.540217838973731*^9}, {3.5402180614351273`*^9, 3.540218070079752*^9}, {
  3.54021814905459*^9, 3.540218192348908*^9}, {3.540218316698448*^9, 
  3.540218395423558*^9}, {3.540218962266849*^9, 3.540219017471558*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"RangeChunk", "[", 
   RowBox[{"low_", ",", "high_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"res", ",", "val", ",", "vaf", ",", "lnegs", ",", "hnegs"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"res", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"val", "=", 
      RowBox[{"RoughCritical", "[", "low", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"lnegs", "=", 
      RowBox[{"CountNegs", "[", "val", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"vaf", "=", 
      RowBox[{"RoughCritical", "[", "high", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"hnegs", "=", 
      RowBox[{"CountNegs", "[", "vaf", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"lnegs", "<", "hnegs"}], " ", "||", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"lnegs", "\[Equal]", "hnegs"}], " ", "&&", " ", 
          RowBox[{
           RowBox[{"val", "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", "<", " ", 
           RowBox[{"vaf", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "&&", " ", 
          RowBox[{"hnegs", ">", "0"}]}], ")"}]}], ",", "\[IndentingNewLine]", 
       
       RowBox[{
        RowBox[{"res", "=", 
         RowBox[{"FindLs", "[", 
          RowBox[{"low", ",", "high", ",", "val", ",", "vaf", ",", "1"}], 
          "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "res", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5390243657998734`*^9, 3.539024373684915*^9}, {
  3.539024407285041*^9, 3.539024457783689*^9}, {3.539098517566963*^9, 
  3.539098529232304*^9}, {3.5390987897650747`*^9, 3.539098841837298*^9}, {
  3.5390988815787888`*^9, 3.539098898330863*^9}, {3.539099166256822*^9, 
  3.539099250792904*^9}, {3.539100448033113*^9, 3.5391004556193132`*^9}, {
  3.5391004987660837`*^9, 3.539100499132864*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculation", "Subsection",
 CellChangeTimes->{{3.540217628492135*^9, 3.5402176299070873`*^9}}],

Cell["\<\
Here the parallelization starts. All of those calls to Eigenvalues aren\
\[CloseCurlyQuote]t cheap, and the range-finding can be paralellized as well \
as the actual bisection calculation. RangeChunk, above, is just a wrapper for \
the function that finds ranges. It does the initial calculation and makes \
sure there\[CloseCurlyQuote]s a zero inside the the range before sending it \
off to be bisected.\
\>", "Text",
 CellChangeTimes->{{3.540219076910409*^9, 3.540219086709485*^9}, {
  3.540219117397542*^9, 3.540219136236134*^9}, {3.5402191692842703`*^9, 
  3.5402192423614073`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"NoKernels", "=", "21"}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{
   "Number", " ", "of", " ", "kernels", " ", "in", " ", "the", " ", 
    "Lightweight", " ", "Grid"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.5402192446503057`*^9, 3.540219258666006*^9}}],

Cell[BoxData[
 RowBox[{"int", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"5.", "*", 
      RowBox[{"10", "^", "5"}]}], "-", 
     RowBox[{"0.25", "/", "2"}]}], ")"}], "/", "NoKernels"}]}]], "Input"],

Cell[BoxData[{
 RowBox[{"chunks", "=", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"0.5", ",", 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       RowBox[{"2", "*", "int"}], "+", "0.25"}], "]"}]}], "}"}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<", "NoKernels"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"chunks", "=", 
    RowBox[{"Append", "[", 
     RowBox[{"chunks", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"chunks", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"chunks", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "2"}], "]"}], "]"}], "^", "2"}], "+", 
          RowBox[{"2", "*", "int"}]}], "]"}]}], "}"}]}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.5390986635471983`*^9, 3.539098748837775*^9}, {
   3.539098925530178*^9, 3.539098929808119*^9}, {3.539099006678644*^9, 
   3.5390990240911694`*^9}, {3.539100742624858*^9, 3.539100745695463*^9}, 
   3.5402175872324057`*^9}],

Cell["\<\
The range -- \[Lambda] = 0.5 to 1000 -- gets divided up based on the length \
of time it takes to run Eigenvalues there. The timing of Eigenvalues is \
roughly linear with \[Rho]inf. The amount of time it takes to find a range \
will therefore be approximately the integral of this line over the range.\
\>", "Text",
 CellChangeTimes->{{3.5402192655049677`*^9, 3.5402195386418867`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"DistributeDefinitions", "[", 
   RowBox[{
   "RangeChunk", ",", "CountNegs", ",", "chunks", ",", "FindLs", ",", 
    "RoughCritical", ",", "l"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Every", " ", "kernel", " ", "needs", " ", "all", " ", "of", " ", "the", 
    " ", "functions", " ", "and", " ", "lists", " ", "being", " ", "used"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.539100763378221*^9, 3.5391007928896313`*^9}, {
  3.5402195442671423`*^9, 3.5402195547064457`*^9}, {3.540221092112488*^9, 
  3.540221092393257*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rangesrough", "=", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"RangeChunk", "[", 
      RowBox[{
       RowBox[{"chunks", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"chunks", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "chunks", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.539100438729433*^9, 3.53910048160891*^9}, {
  3.539100636208405*^9, 3.539100649514001*^9}, {3.539100758924336*^9, 
  3.539100760152831*^9}, {3.539100798250482*^9, 3.539100825053975*^9}}],

Cell["\<\
This comes out as a list of lists of pairs, and we just want a list of pairs. \
So we massage it a little.\
\>", "Text",
 CellChangeTimes->{{3.540219575121484*^9, 3.540219602968129*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ranges", "=", 
   RowBox[{"{", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.53910061229661*^9, 3.539100622015382*^9}}],

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<", 
    RowBox[{"Length", "[", "rangesrough", "]"}]}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ranges", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"ranges", ",", 
       RowBox[{"rangesrough", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.539100623030294*^9, 3.539100629465806*^9}, {
  3.539100673965157*^9, 3.539100701585557*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rootfinding for Lcs", "Section",
 CellChangeTimes->{{3.539034157448365*^9, 3.539034166830002*^9}}],

Cell[CellGroupData[{

Cell["Setup", "Subsection",
 CellChangeTimes->{{3.539034168251726*^9, 3.5390341720778913`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Critical", "[", 
   RowBox[{"\[Lambda]_", ",", "consts_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"H", ",", "res", ",", "d\[Rho]", ",", "\[Rho]inf", ",", "nn"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"d\[Rho]", "=", 
      RowBox[{"consts", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Rho]inf", "=", 
      RowBox[{"Round", "[", 
       RowBox[{"consts", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"nn", "=", 
      RowBox[{"Round", "[", 
       RowBox[{"\[Rho]inf", "/", "d\[Rho]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"H", "=", 
      RowBox[{"SparseArray", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"n_", ",", "n_"}], "}"}], "\[Rule]", 
           RowBox[{
            FractionBox["2.", 
             SuperscriptBox["d\[Rho]", "2"]], "-", 
            RowBox[{
             FractionBox["2.", 
              RowBox[{"n", "*", "d\[Rho]"}]], 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "n"}], "*", 
               RowBox[{"d\[Rho]", "/", "\[Lambda]"}]}]]}], "+", 
            FractionBox[
             RowBox[{"l", 
              RowBox[{"(", 
               RowBox[{"l", "+", "1"}], ")"}]}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"n", "*", "d\[Rho]"}], ")"}], "^", "2"}]]}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"n_", ",", " ", "m_"}], "}"}], "/;", " ", 
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{"n", "-", "m"}], "]"}], " ", "\[Equal]", " ", "1"}]}], 
           " ", "\[Rule]", " ", 
           FractionBox[
            RowBox[{"-", "1."}], 
            SuperscriptBox["d\[Rho]", "2"]]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"nn", ",", "nn"}], "}"}], ",", " ", "0."}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"res", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{"H", ",", 
         RowBox[{"-", "25"}]}], "]"}], "]"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "Went", " ", "from", " ", "100", " ", "down", " ", "to", " ", "25", 
        " ", "eigenvalues"}], ",", " ", 
       RowBox[{
       "which", " ", "sped", " ", "this", " ", "calculation", " ", "up", " ", 
        "immensely", " ", "with", " ", "no", " ", "apparent", " ", "loss", 
        " ", "of", " ", "information"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "res", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5301162397411633`*^9, 3.530116240591889*^9}, {
   3.53011661218509*^9, 3.5301166269157248`*^9}, {3.530116667619584*^9, 
   3.530116669041018*^9}, 3.5301185498979273`*^9, {3.538802615478559*^9, 
   3.538802668671652*^9}, {3.538802759989481*^9, 3.538802770368887*^9}, {
   3.5388030998035307`*^9, 3.538803136122018*^9}, {3.538803212356885*^9, 
   3.538803217218152*^9}, {3.53886796172024*^9, 3.5388679641360273`*^9}, {
   3.538868121269012*^9, 3.538868186450102*^9}, {3.5388682242298727`*^9, 
   3.5388682534489403`*^9}, {3.540219618941237*^9, 3.540219624820806*^9}}],

Cell["\<\
This is another version of the RoughCritical function above that only takes \
the 25 eigenvalues closest to 0. It also allows d\[Rho] and \[Rho]inf to be \
varied. Decreasing the number of eigenvalues taken sped up the calculation a \
lot, and if on every range we have 0 eigenvalues at the lower end and 1 on \
the upper end, that\[CloseCurlyQuote]s no big deal -- that\[CloseCurlyQuote]s \
a zero.\
\>", "Text",
 CellChangeTimes->{{3.540219632519911*^9, 3.54021973266916*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Bisect", "[", 
   RowBox[{"F_", ",", "consts_", ",", "x0_", ",", "xf_", ",", "\[Epsilon]_"}],
    "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "mid", ",", "val", ",", "lnegs", ",", "vam", ",", "mnegs", ",", "vah"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"mid", "=", 
      RowBox[{"x0", "+", 
       FractionBox[
        RowBox[{"Abs", "[", 
         RowBox[{"x0", "-", "xf"}], "]"}], "2"]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Bisecting. Midpoint is \>\"", "<>", 
       RowBox[{"ToString", "[", "mid", "]"}]}], "]"}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{"Again", ",", " ", 
       RowBox[{"lets", " ", "you", " ", "know", " ", 
        RowBox[{"it", "'"}], "s", " ", 
        RowBox[{"working", "/", "progress"}]}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"val", "=", 
      RowBox[{"F", "[", 
       RowBox[{"x0", ",", "consts"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"lnegs", "=", 
      RowBox[{"CountNegs", "[", "val", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"vam", "=", 
      RowBox[{"F", "[", 
       RowBox[{"mid", ",", "consts"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"mnegs", "=", 
      RowBox[{"CountNegs", "[", "vam", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"xf", "-", "x0"}], ">", "\[Epsilon]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"lnegs", "<", "mnegs"}], " ", "||", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"lnegs", "\[Equal]", "mnegs"}], " ", "&&", " ", 
             RowBox[{
              RowBox[{"val", "[", 
               RowBox[{"[", "1", "]"}], "]"}], " ", "<", " ", 
              RowBox[{"vam", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}]}], ")"}]}], ",", " ", 
          RowBox[{"(*", 
           RowBox[{
           "if", " ", "there", " ", "is", " ", "a", " ", "zero", " ", "on", 
            " ", "the", " ", "lower", " ", "half"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Return", "[", 
            RowBox[{"Bisect", "[", 
             RowBox[{
             "F", ",", "consts", ",", "x0", ",", "mid", ",", "\[Epsilon]"}], 
             "]"}], "]"}], ";"}], ",", " ", 
          RowBox[{"(*", 
           RowBox[{"bisect", " ", "it"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Return", "[", 
            RowBox[{"Bisect", "[", 
             RowBox[{
             "F", ",", "consts", ",", "mid", ",", "xf", ",", "\[Epsilon]"}], 
             "]"}], "]"}], ";"}]}], " ", 
         RowBox[{"(*", 
          RowBox[{
          "otherwise", " ", "try", " ", "the", " ", "upper", " ", "half"}], 
          "*)"}], "\[IndentingNewLine]", "]"}], ";"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"vah", " ", "=", " ", 
         RowBox[{"F", "[", 
          RowBox[{"xf", ",", "consts"}], "]"}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{"mid", ",", "lnegs", ",", 
           RowBox[{"CountNegs", "[", "vah", "]"}]}], "}"}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.530115616834133*^9, 3.5301156252633038`*^9}, {
   3.530115745223833*^9, 3.5301158155111523`*^9}, {3.5301158490391483`*^9, 
   3.530115880391429*^9}, {3.530116076471526*^9, 3.5301161089602213`*^9}, {
   3.530116641202567*^9, 3.5301166784474077`*^9}, 3.530118498281904*^9, 
   3.5301185415946493`*^9, {3.530118807986784*^9, 3.530118837216745*^9}, {
   3.530118892162161*^9, 3.530118995156069*^9}, {3.530119137781747*^9, 
   3.530119171339416*^9}, {3.530119327245511*^9, 3.53011932792365*^9}, {
   3.530119591119488*^9, 3.530119595819223*^9}, 3.530288556842297*^9, {
   3.537039529702327*^9, 3.537039548599237*^9}, {3.5370397042292957`*^9, 
   3.5370397049180307`*^9}, {3.537047864940765*^9, 3.537047886492227*^9}, {
   3.537657033571357*^9, 3.537657041500163*^9}, {3.540219750643631*^9, 
   3.5402197509916153`*^9}, {3.540219782242721*^9, 3.540219797249703*^9}}],

Cell["\<\
Bisection rootfinder, finding where a new negative eigenvalue appears. It \
returns not only the midpoint, but the number of negative eigenvalues at the \
low and high ends of the final range. This allows for a quick eyeball check \
if necessary to verify that there is in fact a zero where the function says \
there is.\
\>", "Text",
 CellChangeTimes->{{3.540219845962758*^9, 3.54021985533813*^9}, {
  3.5402199018081284`*^9, 3.540219940615498*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Findlc", "[", 
   RowBox[{"input_", ",", "i_", ",", "eps_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"val", ",", "vah", ",", "lnegs", ",", "hnegs", ",", "res"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"\"\<***Beginning to calculate the \>\"", "<>", 
       RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<th lambda, part \>\"", 
       "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"input", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"val", "=", 
      RowBox[{"Critical", "[", 
       RowBox[{
        RowBox[{"input", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.1", ",", 
          RowBox[{"input", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"input", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "/", "0.1"}]}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"vah", "=", 
      RowBox[{"Critical", "[", 
       RowBox[{
        RowBox[{"input", "[", 
         RowBox[{"[", "4", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.1", ",", 
          RowBox[{"input", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"input", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "/", "0.1"}]}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"lnegs", "=", 
      RowBox[{"CountNegs", "[", "val", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"hnegs", "=", 
      RowBox[{"CountNegs", "[", "vah", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"lnegs", "<", "hnegs"}], " ", "||", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"lnegs", "\[Equal]", "hnegs"}], " ", "&&", " ", 
          RowBox[{
           RowBox[{"val", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "<", 
           RowBox[{"vah", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], ")"}]}], ",", 
       RowBox[{"(*", 
        RowBox[{"doublechecks", " ", "for", " ", "zero"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Print", "[", "\"\<Pass!\>\"", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"res", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"input", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"Bisect", "[", 
            RowBox[{"Critical", ",", 
             RowBox[{"{", 
              RowBox[{"0.1", ",", 
               RowBox[{"input", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"input", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "/", "0.1"}]}], "}"}], ",", 
             RowBox[{"input", "[", 
              RowBox[{"[", "3", "]"}], "]"}], ",", 
             RowBox[{"input", "[", 
              RowBox[{"[", "4", "]"}], "]"}], ",", "eps"}], "]"}]}], "}"}]}], 
        ";"}], "\[IndentingNewLine]", ",", 
       RowBox[{"(*", "else", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Print", "[", "\"\<Fail!\>\"", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"res", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"input", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "Null"}], "}"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "res", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.530226314420801*^9, 3.530226465246111*^9}, {
   3.530226713391532*^9, 3.530226958728467*^9}, {3.530227112561317*^9, 
   3.530227160441638*^9}, {3.530227422105815*^9, 3.530227429608878*^9}, {
   3.530227877019434*^9, 3.5302279383927937`*^9}, {3.530227984419868*^9, 
   3.5302281036811867`*^9}, {3.530228138701189*^9, 3.530228148099204*^9}, {
   3.5302284611650667`*^9, 3.530228481009631*^9}, {3.530228542690007*^9, 
   3.5302287330634823`*^9}, {3.530229585649015*^9, 3.5302296435849953`*^9}, 
   3.5302885568617163`*^9, {3.537039060483687*^9, 3.537039061771584*^9}, {
   3.537048208288788*^9, 3.5370482139178867`*^9}, {3.539018361056962*^9, 
   3.5390183752022257`*^9}}],

Cell["\<\
This is the wrapper for parallel bisection. It makes sure that there is in \
fact a zero in the range, because the \[Rho]inf dependence means that \
sometimes the critical \[Lambda] drifts out of the range. Any bisections done \
where there is no zero in the range would return the upper endpoint and be \
useless.\
\>", "Text",
 CellChangeTimes->{{3.5402199489032297`*^9, 3.540220060188739*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ListRandomize", "[", "list_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"order", ",", "res"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"order", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RandomReal", "[", "]"}], ",", "i"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "list", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"order", " ", "=", " ", 
      RowBox[{"Sort", "[", "order", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"res", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"list", "[", 
         RowBox[{"[", 
          RowBox[{"order", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "list", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "res", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input"],

Cell["\<\
This is a quick-and-dirty optimization for the parallel rootfinding. All it \
does is mix up the inputs so a kernel is less likely to get two long or two \
short calculations.\
\>", "Text",
 CellChangeTimes->{{3.5402200699560738`*^9, 3.540220078116111*^9}, {
  3.5402209318978977`*^9, 3.540221015761108*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rhoinfs", "=", 
   RowBox[{"{", 
    RowBox[{"40", ",", "80"}], "}"}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"Scaling", " ", "factors", " ", "for", " ", "\[Lambda]"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.540221023987705*^9, 3.540221031746752*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["First calculations: refinement", "Subsection",
 CellChangeTimes->{{3.539034354720571*^9, 3.5390343599819736`*^9}}],

Cell["\<\
To reduce the number of failed rootfinding attempts, we refined the rough \
ranges above a bit more at different values of \[Rho]inf. The first gets down \
to a range of width 1/4, the second, a range of width 1/32. \
\>", "Text",
 CellChangeTimes->{{3.540221046447463*^9, 3.54022114361089*^9}, {
  3.540221440332905*^9, 3.540221440660904*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"inputslow", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{
        RowBox[{"rhoinfs", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{"ranges", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"ranges", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], "-", "2"}], ",", 
       RowBox[{
        RowBox[{"ranges", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "+", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "ranges", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.5390342127731943`*^9, 3.539034300802642*^9}, 
   3.5390343704264917`*^9}],

Cell["\<\
In order to deal with randomization later, the inputs are tagged with a \
number so they can be sorted again. This number is retained by Findlc.\
\>", "Text",
 CellChangeTimes->{{3.540221202916459*^9, 3.5402212129461193`*^9}, {
  3.5402212480814743`*^9, 3.540221276465622*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"inputslow", "=", 
   RowBox[{"ListRandomize", "[", "inputslow", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.539034597326088*^9, 3.539034604096105*^9}}],

Cell[BoxData[
 RowBox[{"DistributeDefinitions", "[", 
  RowBox[{
  "Critical", ",", "Bisect", ",", "CountNegs", ",", "Findlc", ",", 
   "inputslow", ",", "l"}], "]"}]], "Input",
 CellChangeTimes->{{3.539034727802565*^9, 3.5390347512079372`*^9}, {
  3.539293778365081*^9, 3.539293778853266*^9}}],

Cell[BoxData[
 RowBox[{"refinement", "=", 
  RowBox[{"ParallelTable", "[", 
   RowBox[{
    RowBox[{"Findlc", "[", 
     RowBox[{
      RowBox[{"inputslow", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", "i", ",", "0.25"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "inputslow", "]"}]}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.539034585811781*^9, 3.5390345928314123`*^9}, {
  3.5390346277132263`*^9, 3.539034627904958*^9}, {3.539034783769182*^9, 
  3.539034786913083*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"refinement", "=", 
   RowBox[{"Sort", "[", "refinement", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.539034639951797*^9, 3.5390346439113417`*^9}, {
  3.539034708705573*^9, 3.539034710711499*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"inputshigh", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{
        RowBox[{"rhoinfs", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "*", 
        RowBox[{"refinement", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2", ",", "1"}], "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"refinement", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2", ",", "1"}], "]"}], "]"}], "-", "0.75"}], ",", 
       RowBox[{
        RowBox[{"refinement", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2", ",", "1"}], "]"}], "]"}], "+", "0.75"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "refinement", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.539034372998849*^9, 3.53903438613024*^9}, {
  3.539034649978346*^9, 3.539034693426428*^9}, {3.5402213147323523`*^9, 
  3.540221314860115*^9}}],

Cell[BoxData[
 RowBox[{"inputshigh", "=", 
  RowBox[{"ListRandomize", "[", "inputshigh", "]"}]}]], "Input",
 CellChangeTimes->{{3.5390347134052687`*^9, 3.5390347193435287`*^9}}],

Cell[BoxData[
 RowBox[{"DistributeDefinitions", "[", "inputshigh", "]"}]], "Input",
 CellChangeTimes->{{3.539034757714672*^9, 3.539034765277754*^9}}],

Cell[BoxData[
 RowBox[{"refinement2", "=", 
  RowBox[{"ParallelTable", "[", 
   RowBox[{
    RowBox[{"Findlc", "[", 
     RowBox[{
      RowBox[{"inputshigh", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", "i", ",", 
      RowBox[{"1", "/", "32."}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "inputshigh", "]"}]}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.539034768661909*^9, 3.539034781365921*^9}, {
  3.539034820034943*^9, 3.5390348297372828`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"refinement2", "=", 
   RowBox[{"Sort", "[", "refinement2", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5390348542971897`*^9, 3.539034869023994*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Second calculation: lcs for real", "Subsection",
 CellChangeTimes->{{3.539034835902487*^9, 3.5390348423182583`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ref1ins", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{
        RowBox[{"rhoinfs", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{"refinement", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2", ",", "1"}], "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"refinement", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2", ",", "1"}], "]"}], "]"}], "-", 
        RowBox[{"1", "/", "4."}]}], ",", 
       RowBox[{
        RowBox[{"refinement", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2", ",", "1"}], "]"}], "]"}], "+", 
        RowBox[{"1", "/", "4."}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "refinement", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ref2ins", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"i", "+", 
        RowBox[{"Length", "[", "ref1ins", "]"}]}], ",", 
       RowBox[{
        RowBox[{"rhoinfs", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "*", 
        RowBox[{"refinement2", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2", ",", "1"}], "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"refinement2", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2", ",", "1"}], "]"}], "]"}], "-", 
        RowBox[{"1", "/", "64."}]}], ",", 
       RowBox[{
        RowBox[{"refinement2", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2", ",", "1"}], "]"}], "]"}], "+", 
        RowBox[{"1", "/", "64."}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "refinement2", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input"],

Cell[TextData[{
 "And now we combine the refined ranges, make input lists out of them, and \
find the values of the \[Lambda]cs to within ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["10", 
     RowBox[{"-", "6"}]], "."}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.5402217706174*^9, 3.540221803149364*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"newins", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Sort", "[", "ref1ins", "]"}], ",", 
     RowBox[{"Sort", "[", "ref2ins", "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.5390348808629303`*^9, {3.539034960298325*^9, 3.53903496896832*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"newins", "=", 
   RowBox[{"ListRandomize", "[", "newins", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5390349624457417`*^9, 3.539034972191924*^9}}],

Cell[BoxData[
 RowBox[{"DistributeDefinitions", "[", "newins", "]"}]], "Input",
 CellChangeTimes->{{3.53903497874205*^9, 3.539034983647563*^9}}],

Cell[BoxData[
 RowBox[{"lcs", "=", 
  RowBox[{"ParallelTable", "[", 
   RowBox[{
    RowBox[{"Findlc", "[", 
     RowBox[{
      RowBox[{"newins", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", "i", ",", 
      RowBox[{"10", "^", 
       RowBox[{"-", "6"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "newins", "]"}]}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"lcs", "=", 
  RowBox[{"Sort", "[", "lcs", "]"}]}]], "Input"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fitting and Data Analysis", "Section",
 CellChangeTimes->{{3.539035002112176*^9, 3.5390350082223997`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"lcs", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"lcs", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2", ",", "1"}], "]"}], "]"}], "-", 
        RowBox[{"lcs", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", "+", 
            RowBox[{
             RowBox[{"Length", "[", "lcs", "]"}], "/", "2"}]}], ",", "2", ",",
            "1"}], "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{
        RowBox[{"Length", "[", "lcs", "]"}], "/", "2"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.539035022474353*^9, 3.5390350287947483`*^9}, {
  3.539035071566321*^9, 3.539035080195834*^9}}],

Cell["\<\
This bit exports the data to a file for further analysis. The directory \
should be set to wherever this notebook is running.\
\>", "Text",
 CellChangeTimes->{{3.540221982468917*^9, 3.540222008171452*^9}}],

Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  "\"\<~/Desktop/Ellen/Thesis/Calculations/Angular Momentum/\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.539220601479047*^9, 3.539220621134047*^9}}],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"\"\<l\>\"", "<>", 
    RowBox[{"ToString", "[", "l", "]"}], "<>", "\"\<.csv\>\""}], ",", 
   "data"}], "]"}]], "Input",
 CellChangeTimes->{{3.5392205145615253`*^9, 3.539220561895562*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", "\"\<ErrorBarPlots`\>\"", "]"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"dataplot", " ", "=", " ", 
  RowBox[{"ErrorBarPlots`ErrorListPlot", "[", "data", "]"}]}]], "Input",
 CellChangeTimes->{{3.539035096424265*^9, 3.539035096816082*^9}}],

Cell["Quadratic fit", "Text",
 CellChangeTimes->{{3.540222019434523*^9, 3.54022202140971*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fit", "=", 
  RowBox[{"FindFit", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{
     RowBox[{"a", " ", 
      SuperscriptBox["x", "2"]}], "+", 
     RowBox[{"b", " ", "x"}], "+", "c"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.53922042649611*^9, 3.539220431415443*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "\[Rule]", 
    RowBox[{"-", "0.02204434003481057`"}]}], ",", 
   RowBox[{"b", "\[Rule]", "48.26706804893477`"}], ",", 
   RowBox[{"c", "\[Rule]", 
    RowBox[{"-", "36.58998989696374`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.539220439952455*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"F", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"a", " ", 
    RowBox[{"x", "^", "2"}]}], "+", 
   RowBox[{"b", " ", "x"}], "+", "c"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"fitplot", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"F", "[", "x", "]"}], "/.", "fit"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "35"}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"dataplot", ",", "fitplot"}], "]"}]], "Input"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1280, 686},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit) (February 23, 2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 197, 5, 76, "Title"],
Cell[767, 29, 382, 7, 26, "Text"],
Cell[CellGroupData[{
Cell[1174, 40, 111, 1, 67, "Section"],
Cell[CellGroupData[{
Cell[1310, 45, 146, 2, 34, "Subsection"],
Cell[1459, 49, 242, 6, 27, "Input"],
Cell[1704, 57, 2803, 70, 180, "Input"],
Cell[4510, 129, 1167, 19, 86, "Text"],
Cell[5680, 150, 770, 21, 118, "Input"],
Cell[6453, 173, 4394, 101, 370, "Input"],
Cell[10850, 276, 1266, 19, 101, "Text"],
Cell[12119, 297, 2067, 49, 178, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14223, 351, 101, 1, 34, "Subsection"],
Cell[14327, 354, 597, 10, 41, "Text"],
Cell[14927, 366, 290, 7, 27, "Input"],
Cell[15220, 375, 215, 7, 27, "Input"],
Cell[15438, 384, 1187, 33, 73, "Input"],
Cell[16628, 419, 396, 6, 41, "Text"],
Cell[17027, 427, 570, 13, 43, "Input"],
Cell[17600, 442, 722, 19, 27, "Input"],
Cell[18325, 463, 196, 4, 26, "Text"],
Cell[18524, 469, 156, 4, 27, "Input"],
Cell[18683, 475, 563, 15, 58, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[19295, 496, 104, 1, 67, "Section"],
Cell[CellGroupData[{
Cell[19424, 501, 95, 1, 34, "Subsection"],
Cell[19522, 504, 3400, 83, 180, "Input"],
Cell[22925, 589, 488, 8, 41, "Text"],
Cell[23416, 599, 4335, 101, 295, "Input"],
Cell[27754, 702, 460, 8, 41, "Text"],
Cell[28217, 712, 4366, 106, 238, "Input"],
Cell[32586, 820, 406, 7, 41, "Text"],
Cell[32995, 829, 1184, 33, 103, "Input"],
Cell[34182, 864, 318, 6, 26, "Text"],
Cell[34503, 872, 295, 8, 27, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34835, 885, 120, 1, 34, "Subsection"],
Cell[34958, 888, 354, 6, 26, "Text"],
Cell[35315, 896, 865, 26, 27, "Input"],
Cell[36183, 924, 287, 5, 26, "Text"],
Cell[36473, 931, 190, 4, 27, "Input"],
Cell[36666, 937, 294, 6, 27, "Input"],
Cell[36963, 945, 540, 14, 27, "Input"],
Cell[37506, 961, 234, 5, 27, "Input"],
Cell[37743, 968, 994, 28, 27, "Input"],
Cell[38740, 998, 177, 3, 27, "Input"],
Cell[38920, 1003, 149, 2, 27, "Input"],
Cell[39072, 1007, 518, 14, 27, "Input"],
Cell[39593, 1023, 187, 4, 27, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39817, 1032, 122, 1, 34, "Subsection"],
Cell[39942, 1035, 878, 26, 27, "Input"],
Cell[40823, 1063, 952, 28, 27, "Input"],
Cell[41778, 1093, 365, 10, 29, "Text"],
Cell[42146, 1105, 301, 8, 27, "Input"],
Cell[42450, 1115, 186, 4, 27, "Input"],
Cell[42639, 1121, 144, 2, 27, "Input"],
Cell[42786, 1125, 405, 12, 27, "Input"],
Cell[43194, 1139, 84, 2, 27, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[43327, 1147, 112, 1, 67, "Section"],
Cell[43442, 1150, 902, 27, 27, "Input"],
Cell[44347, 1179, 215, 4, 26, "Text"],
Cell[44565, 1185, 197, 4, 27, "Input"],
Cell[44765, 1191, 249, 6, 27, "Input"],
Cell[45017, 1199, 97, 2, 27, "Input"],
Cell[45117, 1203, 189, 3, 27, "Input"],
Cell[45309, 1208, 94, 1, 26, "Text"],
Cell[CellGroupData[{
Cell[45428, 1213, 629, 18, 33, "Input"],
Cell[46060, 1233, 308, 8, 27, "Output"]
}, Open  ]],
Cell[46383, 1244, 185, 6, 27, "Input"],
Cell[46571, 1252, 231, 7, 27, "Input"],
Cell[46805, 1261, 93, 2, 27, "Input"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
